#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
token-length=32
session-duration=180000
date-format=yyyy-MM-dd
min-username-length=4
min-password-length=6
auth-header-name=gecko-access-token

# Local db credentials
DATABASE_URL = jdbc:postgresql://localhost:5432/postgres
DATABASE_USERNAME = postgres
DATABASE_PASSWORD = as

# more info: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-sql.html
# more info: https://stackoverflow.com/questions/39521152/configure-springboothibernatepostgresql
# more info: https://devcenter.heroku.com/articles/connecting-to-relational-databases-on-heroku-with-java

# Details for our datasource
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.generate-ddl=true
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = false
spring.jpa.hibernate.ddl-auto = create-drop
# spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.initialization-mode=always

# CORS
cors.origins=*
